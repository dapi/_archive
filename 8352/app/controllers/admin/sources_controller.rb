# -*- coding: utf-8 -*-
# Controller generated by Typus, use it to extend admin functionality.
class Admin::SourcesController < Admin::MasterController #ApplicationController
  
#  def show
#    @croots=Category.roots
#    super
#  end
  
  # def reset_imported_categories
  #   @source=Source.find_by_id(params[:id])
  #   ResultCategory.destroy_all(:source_id=>@source.id)
    
  #   redirect_to :action=>:show, :id=>params[:id]
  # end

  # def reset_imported_companies
  #   @source=Source.find_by_id(params[:id])
  #   @source.companies.each { |c| c.destroy }
  #   Result.update_all({:company_id=>nil,:state=>'updated'},{:source_id=>@source.id})
    
  #   redirect_to :action=>:show, :id=>params[:id]
  # end

  def company_groups
    @item=Source.find_by_id(params[:id])
  end
  
  def set_company_group
    # Экспорт записей, имеющих категорию
#    @exported_records=s.export_to_catalog

    params[:id]=params[:item][:id]
  
    s=Source.find_by_id(params[:id]).andand.set_company_groups(params[:groups])
  
    redirect_to :action=>:company_group, :id=>params[:id]
    
  end
  
  def import_results
    
    @source=Source.find_by_id(params[:id])
    @result=@source.import_results
   
  end


=begin

  ##
  # You can overwrite and extend Admin::MasterController with your methods.
  #
  # Actions have to be defined in <tt>config/typus/application.yml</tt>:
  #
  #   Source:
  #     actions:
  #       index: custom_action
  #       edit: custom_action_for_an_item
  #
  # And you have to add permissions on <tt>config/typus/application_roles.yml</tt> 
  # to have access to them.
  #
  #   admin:
  #     Source: create, read, update, destroy, custom_action
  #
  #   editor:
  #     Source: create, read, update, custom_action_for_an_item
  #

  def index
  end

  def custom_action
  end

  def custom_action_for_an_item
  end

=end

end
